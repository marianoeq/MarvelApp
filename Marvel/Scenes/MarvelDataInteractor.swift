//
//  MarvelDataInteractor.swift
//  Marvel
//
//  Created by Mariano Quiroga on 8/6/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MarvelDataBusinessLogic {
  func doLoadData(request: MarvelData.Characters.Request)
}

protocol MarvelDataDataStore {
  var charactersData: [CharacterResult]? { get set }
}

class MarvelDataInteractor: MarvelDataBusinessLogic, MarvelDataDataStore {

  var presenter: MarvelDataPresentationLogic?

  let networkManager = NetworkManager()

  // MARK: - Properties - Data store

  var charactersData: [CharacterResult]?

// MARK: - Methods

  func doLoadData(request: MarvelData.Characters.Request) {
    networkManager.getMarvelCharacters() { [weak self] result in
      guard let self = self else {
        return
      }
      var state: LoadMarvelDataViewState
      switch result {
      case .success(let entity):
        state = .success(charactersResult: entity)
      case .failure(let error):
        state = .error
      }
      let response = MarvelData.Characters.Response(state: state)
      presenter?.presentData(response: response)
    }
  }
}
