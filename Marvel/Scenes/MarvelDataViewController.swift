//
//  MarvelDataViewController.swift
//  Marvel
//
//  Created by Mariano Quiroga on 8/6/24.
//  Copyright (c) 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MarvelDataDisplayLogic: AnyObject {
  func displayData(viewModel: MarvelData.Characters.ViewModel)
}

class MarvelDataViewController: UIViewController {

  // MARK: - Properties - Dependencies

  var interactor: MarvelDataBusinessLogic?
  var router: (MarvelDataRoutingLogic & MarvelDataDataPassing)?
  var networkManager =  NetworkManager()


  // MARK: - Properties - Internal

  let sceneView = MarvelDataView()

  // MARK: Properties

  let testLabel = UILabel()

  // MARK: Object lifecycle

  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }

  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }

  // MARK: Setup

  private func setup() {
    let viewController = self
    let interactor = MarvelDataInteractor()
    let presenter = MarvelDataPresenter()
    let router = MarvelDataRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }

  // MARK: View lifecycle

  override public func loadView() {
    view = sceneView
  }

  override public func viewDidLoad() {
    super.viewDidLoad()
    doLoadData()
    setupNavigationBar()
  }

  // MARK: - Private

  private func setupNavigationBar() {

    let titleLabel = UILabel()
    titleLabel.text = "Marvel App"
    titleLabel.font = UIFont.boldSystemFont(ofSize: 17)
    titleLabel.sizeToFit()
    let titleView = UIView(frame: titleLabel.bounds)
    titleView.addSubview(titleLabel)
    navigationItem.titleView = titleView

    let icon = UIBarButtonItem(barButtonSystemItem: .search, target: nil, action: nil) /* Falta implementacion del filtrado*/
    navigationItem.rightBarButtonItems = [icon]
  }
}

// MARK: - Output

extension MarvelDataViewController {
  
  func doLoadData() {
    let request = MarvelData.Characters.Request()
    interactor?.doLoadData(request: request)
  }
}

// MARK: - Input

extension MarvelDataViewController: MarvelDataDisplayLogic {

  func displayData(viewModel: MarvelData.Characters.ViewModel) {
    switch viewModel.action {
    case .showData(let characters):
      let data = MarvelListViewData(charactersList: characters)
      sceneView.setState(state: .loaded(data: data))
    case .showError(let message):
      sceneView.setState(state: .error(message: message))
    }
  }
}

